@startuml
actor User
participant "Client App" as Client
participant "Biometric Sensor" as Sensor
participant "Auth Server" as Server
database "Biometric DB (encrypted)" as DB

/' --- Enrollment --- '/
User -> Client : start enrollment
Client -> Sensor : capture biometric sample
Sensor --> Client : raw sample (with liveness result)
Client -> Client : preprocess & extract template
Client -> Server : POST /enroll {userID, template_encrypted, metadata}
Server -> DB : store(userID, template_encrypted, metadata)
DB --> Server : ack
Server --> Client : 201 Created (enrollment success)
Client --> User : show enrollment success

/' --- Verification --- '/
User -> Client : start login (choose biometric)
Client -> Sensor : capture biometric sample
Sensor --> Client : raw sample
Client -> Client : preprocess & extract probe_template
Client -> Server : POST /verify {userID, probe_encrypted, metadata}
Server -> DB : fetch template_encrypted by userID
DB --> Server : template_encrypted
Server -> Server : decrypt template, decrypt probe
Server -> Server : compare(template, probe) : similarity score
alt score >= threshold
    Server --> Client : 200 OK (authentication success)
    Client --> User : show login success
else score < threshold
    Server --> Client : 401 Unauthorized (authentication failed)
    Client --> User : show login failed
end

note over Server,DB
Templates stored encrypted & irreversible.
Enable logging, rate-limiting, and liveness detection.
end
@enduml
